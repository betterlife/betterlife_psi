# You can specify a custom docker image from Dockerhub as your build environment.
image: python:2.7.13

clone:
  depth: full

pipelines:
  default:
    - step:
        name: Run all Unit Tests
        caches:
          - pip
        script: 
          # Modify the commands below to build your repository.
          # - /etc/init.d/postgresql start # starting the service
          # - sudo -u postgres psql -c "UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';"
          # - sudo -u postgres psql -c "DROP DATABASE template1;"
          # - sudo -u postgres psql -c "CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8';"
          # - sudo -u postgres psql -c "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';"
          # - sudo -u postgres psql -c "CREATE USER flask_sit WITH ENCRYPTED PASSWORD 'flask_sit' SUPERUSER;" # create superuser
          # - sudo -u postgres psql -c "CREATE DATABASE flask_sit OWNER flask_sit ENCODING='UTF8' template=template1;" # create database
          - pip install -r requirements/test.txt
          - python manage.py test
          - pip install codecov
          - codecov --token=$CODECOV_KEY
        services: 
          - postgres 
    - step:
        name: Deploy to Testing Environment
        deployment: test
        script:
          - echo "Deploy to Remote Testing Environment"
          - export BUILD_DATE=`date "+%Y/%m/%d@%H:%M:%S"`
          - echo "$BITBUCKET_COMMIT - $BITBUCKET_BUILD_NUMBER - $BITBUCKET_BRANCH $BITBUCKET_TAG $BUILD_DATE" > psi/swtag
          - cat psi/swtag
          - git config --global user.email "lawrence@betterlife.io"
          - git config --global user.name "Lawrence"                    
          - git add psi/swtag
          - git commit -m "Add swtag"
          # Always push to heroku master branch as it will ignore all non master branch push
          - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master --force
          
definitions: 
  services: 
    postgres: 
      image: postgres 
      environment: 
        POSTGRES_DB: 'flask_sit' 
        POSTGRES_USER: 'flask_sit'
        POSTGRES_PASSWORD: 'flask_sit'
